server {
    server_name promatesllc.com www.promatesllc.com;

    root /var/www/promates;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /assets/ {
        try_files $uri =404;
    }

    location /media/ {
        try_files $uri =404;
    }
    
    # Route for the API
    location /api {
        proxy_pass http://localhost:3000; # Forward requests to your Node.js app
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Route for the Google OAuth callback
    location /auth {
        proxy_pass http://localhost:3000; # Forward requests to your Node.js app
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    error_page 404 /index.html;

    access_log /var/log/nginx/promatesllc_access.log;
    error_log /var/log/nginx/promatesllc_error.log; 

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/promatesllc.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/promatesllc.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.promatesllc.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = promatesllc.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name promatesllc.com www.promatesllc.com;
    return 404; # managed by Certbot
}